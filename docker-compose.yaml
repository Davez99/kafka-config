version: '3.8'  # Versão do Docker Compose. A 3.8 é compatível com recursos modernos e amplamente suportada.

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3  # Imagem do Zookeeper usada pela Confluent, versão 7.5.3.
    hostname: zookeeper                     # Nome do host dentro da rede Docker (usado para comunicação interna).
    container_name: zookeeper               # Nome do container (opcional, apenas para facilitar).
    ports:
      - "2181:2181"                         # Expõe a porta padrão do Zookeeper (2181) no host.
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181          # Porta onde o Zookeeper escutará requisições de clientes.
      ZOOKEEPER_TICK_TIME: 2000            # Intervalo básico de tempo para o Zookeeper em milissegundos.

  kafka:
    image: confluentinc/cp-kafka:7.5.3      # Imagem do Apache Kafka da Confluent, versão 7.5.3.
    hostname: kafka                         # Nome do host dentro da rede Docker (usado internamente).
    container_name: kafka                   # Nome do container Kafka.
    ports:
      - "9092:9092"                         # Expõe a porta 9092 no host para se comunicar com clientes externos.
    environment:
      KAFKA_BROKER_ID: 1                    # Identificador único para este broker Kafka.
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'  # Endereço do Zookeeper (nome do container + porta).
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092  # Lista de listeners que o Kafka "anuncia". Clientes internos usam kafka:29092, externos usam localhost:9092.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT  # Define o protocolo para cada listener nomeado.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT  # Define qual listener os brokers usarão para se comunicar entre si.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Define o número de réplicas para os tópicos internos do Kafka (como __consumer_offsets). Como é ambiente local, pode ser 1.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # Evita atraso na primeira re-balanceamento de grupos de consumidores.
    depends_on:
      - zookeeper                          # Garante que o Zookeeper seja iniciado antes do Kafka.

  kafka-ui:
    image: provectuslabs/kafka-ui:latest   # Imagem da interface web Kafka UI.
    container_name: kafka-ui               # Nome do container da interface Kafka UI.
    ports:
      - 8080:8080                          # Expondo a interface web do Kafka UI na porta 8080 do host.
    depends_on:
      - kafka                              # Espera o Kafka estar de pé antes de subir.
    environment:
      KAFKA_CLUSTERS_0_NAME: PlansulBrokerKafka  # Nome do cluster exibido na interface.
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092  # Endereço interno do Kafka para a interface se conectar.
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181       # Endereço do Zookeeper usado pelo Kafka UI.

    # volumes:
    #   - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml    # (Opcional) Configuração dinâmica persistente da UI
